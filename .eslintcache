[{"/Users/mishamarodi/Desktop/ideo-whether-app/src/Components/SearchInput/SearchInput.tsx":"1","/Users/mishamarodi/Desktop/ideo-whether-app/src/Components/NoDataComponent/NoDataComponent.tsx":"2","/Users/mishamarodi/Desktop/ideo-whether-app/src/App.tsx":"3","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Login/Login.tsx":"4","/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/userReducer/user.reducer.ts":"5","/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/favoriteCities.reducer/facoriteCities.reducer.ts":"6","/Users/mishamarodi/Desktop/ideo-whether-app/src/api/weather.api.ts":"7","/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/app.reducer/app.reducer.ts":"8","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/WeatherStatisticContainer/WeatherStatisticTable/WeatherStatisticTable.tsx":"9","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/WeatherStatisticContainer/DailyChart/DailyChart.tsx":"10","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/MainWeatherInfo/HourlyChart/HourlyChart.tsx":"11","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/WeatherStatisticContainer/WeatherStatisticTable/Table/Table.tsx":"12","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/MainWeatherInfo/MainWeatherInfo/MainWeatherInfo.tsx":"13","/Users/mishamarodi/Desktop/ideo-whether-app/src/reportWebVitals.ts":"14","/Users/mishamarodi/Desktop/ideo-whether-app/src/helper/auth.ts":"15","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/MainWeatherInfo/MainWeatherInfoContainer.tsx":"16","/Users/mishamarodi/Desktop/ideo-whether-app/src/helper/images.ts":"17","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/CityCardContainer/AddModal/AddModal.tsx":"18","/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/store.ts":"19","/Users/mishamarodi/Desktop/ideo-whether-app/src/index.tsx":"20","/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/dayWeather.reducer/dayWeather.reducer.ts":"21","/Users/mishamarodi/Desktop/ideo-whether-app/src/Components/LoadingSpinner/LoadingSpinner.tsx":"22","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/Main.tsx":"23","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/CityCardContainer/CityCardContainer.tsx":"24","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/WeatherStatisticContainer/WeatherStatisticContainer.tsx":"25","/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/cityWeather.reducer/cityWeather.reducer.ts":"26","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/CityCardContainer/CityCard/CityCard.tsx":"27"},{"size":2506,"mtime":1612223478013,"results":"28","hashOfConfig":"29"},{"size":376,"mtime":1612221715164,"results":"30","hashOfConfig":"29"},{"size":2154,"mtime":1615908930470,"results":"31","hashOfConfig":"29"},{"size":3964,"mtime":1615909091666,"results":"32","hashOfConfig":"29"},{"size":1530,"mtime":1612226246112,"results":"33","hashOfConfig":"29"},{"size":1916,"mtime":1612226246117,"results":"34","hashOfConfig":"29"},{"size":3277,"mtime":1612228459520,"results":"35","hashOfConfig":"29"},{"size":879,"mtime":1612236186530,"results":"36","hashOfConfig":"29"},{"size":4633,"mtime":1615907618672,"results":"37","hashOfConfig":"29"},{"size":1568,"mtime":1612237342314,"results":"38","hashOfConfig":"29"},{"size":2422,"mtime":1612237455132,"results":"39","hashOfConfig":"29"},{"size":1542,"mtime":1612237342300,"results":"40","hashOfConfig":"29"},{"size":2833,"mtime":1612237455125,"results":"41","hashOfConfig":"29"},{"size":425,"mtime":1611656452204,"results":"42","hashOfConfig":"29"},{"size":560,"mtime":1611820580613,"results":"43","hashOfConfig":"29"},{"size":2010,"mtime":1612237155258,"results":"44","hashOfConfig":"29"},{"size":1013,"mtime":1612129354991,"results":"45","hashOfConfig":"29"},{"size":3152,"mtime":1612237155245,"results":"46","hashOfConfig":"29"},{"size":841,"mtime":1612235626139,"results":"47","hashOfConfig":"29"},{"size":763,"mtime":1615916506519,"results":"48","hashOfConfig":"29"},{"size":1029,"mtime":1612130198190,"results":"49","hashOfConfig":"29"},{"size":428,"mtime":1612221362516,"results":"50","hashOfConfig":"29"},{"size":1095,"mtime":1612237155254,"results":"51","hashOfConfig":"29"},{"size":2960,"mtime":1612237155238,"results":"52","hashOfConfig":"29"},{"size":1120,"mtime":1612237342307,"results":"53","hashOfConfig":"29"},{"size":4264,"mtime":1612218675733,"results":"54","hashOfConfig":"29"},{"size":2333,"mtime":1612237155219,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"38b9pu",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mishamarodi/Desktop/ideo-whether-app/src/Components/SearchInput/SearchInput.tsx",["119"],"import React, {ChangeEvent, useEffect, useState} from 'react';\nimport {weatherAPI} from \"../../api/weather.api\";\nimport {useDispatch} from \"react-redux\";\nimport {fetchCityWeatherByName} from \"../../redux/cityWeather.reducer/cityWeather.reducer\";\n\n\nconst SearchInput = () => {\n    const dispatch = useDispatch()\n    const [input, setInput] = useState<string>('')\n    const [request, setRequest] = useState<number>(setTimeout(() => {\n    }))\n    const [error, setError] = useState<string>('')\n    const [city, setCity] = useState<string>('')\n\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setInput(e.currentTarget.value)\n        setError('')\n        setCity('')\n        let value = e.currentTarget.value\n        clearTimeout(request)\n        let id = window.setTimeout(function () {\n            weatherAPI.getWeatherByName(value).then(res => {\n                setCity(res.data.name)\n                dispatch(fetchCityWeatherByName(res.data.name))\n                debugger\n            }).catch(e => {\n                setError(\"City not found\")\n            })\n        }, 1000)\n        setRequest(id)\n    }\n\n    return (\n        <div>\n            <div className=\"input-group mt-2 mb-4 row\">\n                <div className=\"form-outline col-6 mr-2 mr-2\">\n                    <input value={input} onChange={onInputChange} onBlur={() => {\n                        setInput('')\n                        setError('')\n                    }}\n                           type=\"search\" id=\"form1\" placeholder={\"Search\"}\n                           className=\"form-control\"/>\n                </div>\n                {input && !city && !error\n                && <div className='d-flex align-items-center justify-content-center ml-4'>\n                    <div style={{width: '2rem', height: '2rem'}} className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n                }\n                {input && city && <span style={{fontSize: \"16px\"}}\n                                        className='d-flex align-items-center\n                                        ml-4 text-success font-weight-bold'>{city}</span>\n                }\n                {input && error && <span style={{fontSize: \"16px\"}}\n                                         className='d-flex align-items-center ml-4 text-danger font-weight-bold'>{error}</span>}\n            </div>\n        </div>\n    );\n};\n\nexport default SearchInput;\n",["120","121"],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Components/NoDataComponent/NoDataComponent.tsx",[],["122","123"],"/Users/mishamarodi/Desktop/ideo-whether-app/src/App.tsx",["124"],"import React, {useEffect} from 'react';\nimport './App.css';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport Login from \"./Pages/Login/Login\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./redux/store\";\nimport Main from \"./Pages/Main/Main\";\nimport {fetchCityWeatherById} from \"./redux/cityWeather.reducer/cityWeather.reducer\";\nimport {favoriteCitiesType, fetchFavoriteCitiesTC} from \"./redux/favoriteCities.reducer/facoriteCities.reducer\";\nimport {AppReducerType} from \"./redux/app.reducer/app.reducer\";\nimport LoadingSpinner from \"./Components/LoadingSpinner/LoadingSpinner\";\n\nfunction App() {\n    const dispatch = useDispatch();\n\n    const favoriteCities = useSelector<AppRootStateType, favoriteCitiesType>(state => state.favoriteCities)\n\n    const appStatus = useSelector<AppRootStateType, AppReducerType>(state => state.app)\n\n    useEffect(() => {\n        let favoriteArr = JSON.parse(localStorage.getItem('favoriteCities') as string)\n        if (favoriteArr) {\n            dispatch(fetchFavoriteCitiesTC(favoriteArr[0], favoriteArr[1], favoriteArr[2]))\n            dispatch(fetchCityWeatherById(favoriteArr[0]))\n        } else {\n            localStorage.setItem('favoriteCities', JSON.stringify(favoriteCities.map((item => item.id))))\n            dispatch(fetchCityWeatherById(favoriteCities[0].id))\n        }\n    }, [dispatch])\n\n    return (\n        <div style={{backgroundColor: \"#7CB2ED\", minHeight: \"100vh\"}} className='pt-0 pb-0 pt-sm-5 pb-sm-5'>\n            <div style={{backgroundColor: \"#F2FBFF\", borderRadius: \"25px\"}} className=\"container\">\n                <Switch>\n                    {appStatus.isAppLoading === \"loading\" ? <LoadingSpinner/>\n                        : <Route exact path={['/', '/main']} render={() => <Main/>}/>\n                    }\n                    <Route path={'/login'} render={() => <Login/>}/>\n                    <Route path={'/404'} render={() => <h1 className='text-center p-5'>404 Page not found</h1>}/>\n                    <Redirect from={'*'} to={'/404'}/>\n                </Switch>\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n",["125","126"],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Login/Login.tsx",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/userReducer/user.reducer.ts",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/favoriteCities.reducer/facoriteCities.reducer.ts",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/api/weather.api.ts",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/app.reducer/app.reducer.ts",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/WeatherStatisticContainer/WeatherStatisticTable/WeatherStatisticTable.tsx",["127","128","129","130"],"import React, {useState} from 'react';\nimport styles from './WeatherStatisticTable.module.css'\nimport {DailyType, WeatherForOneLocationResponseType} from \"../../../../api/weather.api\";\nimport Table from \"./Table/Table\";\nimport NoDataComponent from \"../../../../Components/NoDataComponent/NoDataComponent\";\nimport DailyChart from \"../DailyChart/DailyChart\";\n\n\ntype WeatherStatisticTablePropsType = {\n    city: WeatherForOneLocationResponseType\n    changeDay: (day: DailyType) => void\n    dt: string\n}\n\nconst WeatherStatisticTable = (props: WeatherStatisticTablePropsType) => {\n\n    const [isActive, setIsActive] = useState<{ [index: string]: boolean }>({\n        first: true,\n        second: false,\n        third: false,\n        fourth: false\n    })\n\n    const [isShowChart, setIsShowChart] = useState<boolean>(false)\n\n\n    const onActiveChange = (position: string) => {\n        let newObj = {...isActive}\n        for (let key in isActive) {\n            if (key === position) {\n                newObj[key] = true\n            } else {\n                newObj[key] = false\n            }\n        }\n\n        if (position !== \"first\") {\n            setIsShowChart(false)\n        }\n\n        setIsActive(newObj)\n    }\n\n    return (\n        <div style={{overflow: \"scroll\", height: \"630px\"}}>\n            <div>\n                <ul className={`nav ${styles.nav} col-12`}>\n                    <li className={`nav-item ${styles.navItem} col-2`}>\n                        <a onClick={() => onActiveChange(\"first\")}\n                           className={`nav-link ${styles.navLink} ${isActive.first && styles.active}`}>Week</a>\n                    </li>\n                    <li className={`nav-item ${styles.navItem} col-2`}>\n                        <a onClick={() => onActiveChange(\"second\")}\n                           className={`nav-link ${styles.navLink} ${isActive.second && styles.active}`}>Month</a>\n                    </li>\n                    <li className={`nav-item ${styles.navItem} col-3`}>\n                        <a onClick={() => onActiveChange(\"third\")}\n                           className={`nav-link ${styles.navLink} ${isActive.third && styles.active}`}>3 Month</a>\n                    </li>\n                    <li className={`nav-item ${styles.navItem} col-3`}>\n                        <a onClick={() => onActiveChange(\"fourth\")}\n                           className={`nav-link ${styles.navLink} ${isActive.fourth && styles.active}`}>6 Month</a>\n                    </li>\n                    <div\n                        className=\"custom-control text-muted\n                        custom-switch col-2 d-flex\n                        align-items-center justify-content-center\">\n                        <input onChange={() => {\n                            setIsShowChart(!isShowChart)\n                        }}\n                               disabled={!isActive.first}\n                               checked={isShowChart} type=\"checkbox\" className=\"custom-control-input\"\n                               id=\"customSwitch1\"/>\n                        <label className={`custom-control-label ${styles.customInput} \n                        ${isShowChart && 'font-weight-bold text-dark'}`}\n                               htmlFor=\"customSwitch1\">Chart</label>\n                    </div>\n                </ul>\n            </div>\n            {isShowChart && <DailyChart/>}\n            {isActive.first &&\n            <div className={\"mt-4\"}>\n                <table className=\"table table-borderless\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\"/>\n                        <th scope=\"col\"/>\n                        <th scope=\"col\"/>\n                        <th scope=\"col\"/>\n                        <th scope=\"col\"/>\n                        <th scope=\"col\"/>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {props.city.daily && props.city.daily.map((day, i) => {\n                        if (i < 7) {\n                            return (\n                                <Table dt={props.dt} changeDay={props.changeDay} key={i} day={day}/>\n                            )\n                        } else {\n                            return null\n                        }\n                    })}\n                    </tbody>\n                </table>\n            </div>}\n            {isActive.second && <NoDataComponent text={\"No Data\"}/>}\n            {isActive.third && <NoDataComponent text={\"No Data\"}/>}\n            {isActive.fourth && <NoDataComponent text={\"No Data\"}/>}\n        </div>\n    );\n};\n\nexport default WeatherStatisticTable;\n","/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/WeatherStatisticContainer/DailyChart/DailyChart.tsx",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/MainWeatherInfo/HourlyChart/HourlyChart.tsx",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/WeatherStatisticContainer/WeatherStatisticTable/Table/Table.tsx",[],["131","132"],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/MainWeatherInfo/MainWeatherInfo/MainWeatherInfo.tsx",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/reportWebVitals.ts",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/helper/auth.ts",[],["133","134"],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/MainWeatherInfo/MainWeatherInfoContainer.tsx",["135"],"import React, {useEffect, useState} from 'react';\nimport styles from './WeatherDetails.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../redux/store\";\nimport {CurrentWeather, WeatherForOneLocationResponseType} from \"../../../api/weather.api\";\nimport MainWeatherInfo from \"./MainWeatherInfo/MainWeatherInfo\";\nimport {backgroundImages} from \"../../../helper/images\";\nimport {logOutTC} from \"../../../redux/userReducer/user.reducer\";\n\nconst MainWeatherInfoContainer = () => {\n\n    const dispatch = useDispatch()\n\n    const cityWeather = useSelector<AppRootStateType, WeatherForOneLocationResponseType>(state => state.cityWeather)\n    const currentWeather = useSelector<AppRootStateType, CurrentWeather>(state => state.dayWeather)\n\n    useEffect(() => {\n        getStyles()\n    }, [currentWeather])\n\n    const [image, setImage] = useState<string>()\n\n    const getStyles = () => {\n        let weatherType = currentWeather.weather[0].main.toLowerCase()\n        setImage(backgroundImages[weatherType])\n    }\n\n    const onSignOut = () => {\n        dispatch(logOutTC())\n    }\n\n    const backgroundStyles = {\n        backgroundImage: `url(${image})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"50% 50%\",\n        backgroundSize: \"cover\",\n        height: \"100%\",\n        width: \"100%\",\n        transition: \"all .4s ease\",\n        position: \"relative\",\n        zIndex: 100\n    } as React.CSSProperties;\n\n    return (\n        <div style={backgroundStyles} className={`w-100 ${styles.darkenBg}`}>\n            <button onClick={onSignOut} style={{position: \"absolute\", margin: \"20px\", right: 0}}\n                    className='btn btn-outline-danger'>Sign Out\n            </button>\n            <MainWeatherInfo weather={currentWeather} countryName={cityWeather.sys.country}\n                             cityName={cityWeather.name} timezone={cityWeather.timezone}\n            />\n        </div>\n    );\n};\n\nexport default MainWeatherInfoContainer;\n","/Users/mishamarodi/Desktop/ideo-whether-app/src/helper/images.ts",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/CityCardContainer/AddModal/AddModal.tsx",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/store.ts",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/index.tsx",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/dayWeather.reducer/dayWeather.reducer.ts",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Components/LoadingSpinner/LoadingSpinner.tsx",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/Main.tsx",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/CityCardContainer/CityCardContainer.tsx",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/WeatherStatisticContainer/WeatherStatisticContainer.tsx",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/redux/cityWeather.reducer/cityWeather.reducer.ts",[],"/Users/mishamarodi/Desktop/ideo-whether-app/src/Pages/Main/CityCardContainer/CityCard/CityCard.tsx",["136","137"],{"ruleId":"138","severity":1,"message":"139","line":1,"column":29,"nodeType":"140","messageId":"141","endLine":1,"endColumn":38},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"142","replacedBy":"146"},{"ruleId":"144","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":29,"column":8,"nodeType":"150","endLine":29,"endColumn":18,"suggestions":"151"},{"ruleId":"142","replacedBy":"152"},{"ruleId":"144","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":49,"column":25,"nodeType":"156","endLine":50,"endColumn":104},{"ruleId":"154","severity":1,"message":"155","line":53,"column":25,"nodeType":"156","endLine":54,"endColumn":105},{"ruleId":"154","severity":1,"message":"155","line":57,"column":25,"nodeType":"156","endLine":58,"endColumn":104},{"ruleId":"154","severity":1,"message":"155","line":61,"column":25,"nodeType":"156","endLine":62,"endColumn":105},{"ruleId":"142","replacedBy":"157"},{"ruleId":"144","replacedBy":"158"},{"ruleId":"142","replacedBy":"159"},{"ruleId":"144","replacedBy":"160"},{"ruleId":"148","severity":1,"message":"161","line":19,"column":8,"nodeType":"150","endLine":19,"endColumn":24,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":38,"column":14,"nodeType":"140","messageId":"165","endLine":38,"endColumn":25},{"ruleId":"138","severity":1,"message":"166","line":38,"column":36,"nodeType":"140","messageId":"141","endLine":38,"endColumn":47},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["167"],"no-negated-in-lhs",["168"],["167"],["168"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'favoriteCities'. Either include it or remove the dependency array.","ArrayExpression",["169"],["167"],["168"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["167"],["168"],["167"],["168"],"React Hook useEffect has a missing dependency: 'getStyles'. Either include it or remove the dependency array.",["170"],"@typescript-eslint/no-redeclare","'AddCityCard' is already defined.","redeclared","'AddCityCard' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [dispatch, favoriteCities]",{"range":"175","text":"176"},"Update the dependencies array to be: [currentWeather, getStyles]",{"range":"177","text":"178"},[1380,1390],"[dispatch, favoriteCities]",[834,850],"[currentWeather, getStyles]"]